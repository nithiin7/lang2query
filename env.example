# Lang2Query Environment Configuration
# Copy this file to .env and update with your values

# =============================================================================
# OpenAI Configuration (Recommended)
# =============================================================================
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4o

# Alternative models:
# OPENAI_MODEL=gpt-4o-mini  # Cheaper option
# OPENAI_MODEL=gpt-4        # Standard GPT-4
# OPENAI_MODEL=gpt-3.5-turbo  # Fastest option

# =============================================================================
# LLM Provider Configuration
# =============================================================================
# Choose your provider: "chatgpt", "ollama", "nvidia", "local"
PROVIDER=chatgpt

# Ollama Configuration (if using Ollama)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.1

# NVIDIA Configuration (if using NVIDIA API)
NVIDIA_API_KEY=your-nvidia-api-key
NVIDIA_BASE_URL=https://api.nvcf.nvidia.com/v1
NVIDIA_MODEL=meta/llama3-70b

# =============================================================================
# Backend Configuration
# =============================================================================
# API Settings
API_HOST=0.0.0.0
API_PORT=8000

# Knowledge Base Settings
KB_DIRECTORY=./src/kb
COLLECTION_NAME=sql_generation_kb

# Database Configuration (if using external database)
DATABASE_URL=postgresql://user:password@localhost:5432/lang2query

# =============================================================================
# Frontend Configuration
# =============================================================================
# Development URLs
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws

# Production URLs (update these for deployment)
PRODUCTION_API_URL=https://your-api-domain.com
PRODUCTION_WS_URL=wss://your-api-domain.com/ws

# =============================================================================
# Docker Configuration
# =============================================================================
# Docker Compose Project Name
COMPOSE_PROJECT_NAME=lang2query

# =============================================================================
# Redis Configuration
# =============================================================================
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=

# =============================================================================
# ChromaDB Configuration
# =============================================================================
CHROMA_SERVER_HOST=0.0.0.0
CHROMA_SERVER_HTTP_PORT=8000
CHROMA_PERSIST_DIRECTORY=./src/kb

# =============================================================================
# Security Configuration
# =============================================================================
# Secret key for JWT tokens (generate a random string)
SECRET_KEY=your-secret-key-here

# CORS settings
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# =============================================================================
# Logging Configuration
# =============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# =============================================================================
# Development Settings
# =============================================================================
# Set to true for development mode
DEBUG=false
DEVELOPMENT=false

# Hot reload settings
WATCH_FILES=true
RELOAD_ON_CHANGE=true

# =============================================================================
# Performance Configuration
# =============================================================================
# Worker processes
WORKERS=4

# Request timeout (seconds)
REQUEST_TIMEOUT=300

# Max request size (MB)
MAX_REQUEST_SIZE=10

# =============================================================================
# Monitoring Configuration
# =============================================================================
# Enable metrics collection
ENABLE_METRICS=true

# Prometheus metrics endpoint
METRICS_ENDPOINT=/metrics

# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
